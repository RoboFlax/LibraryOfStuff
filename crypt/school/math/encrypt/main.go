package main

import (
	"fmt"
	"math/big"
)

var robin = &PrivateKey{
	D: intFromString("5389871559774220240180799440912368590479904556479649312508307102961132748499719514597816385443988115934009997012491913208946750652635968366264048278196538801554579038635485773638859928703523799774128028741952782495686359476777987563502601282333845011295430149317499799185105902599400994767507007378169521595"),
	PublicKey: &PublicKey{
		N: intFromString("132180183489701115413957700574755705909388135551762828378179912286903969784635978572279782785888279986000721355306349300124170313624167795648856422060534188893386976078895735590174953078802461226769494571572703920943447306678076763957901277498576330826854198349332314323981571977058310888548289588163305532271"),
		E: intFromString("515"),
	},
}
var justus = &PublicKey{
	N: intFromString("827210260366768758085244340579330206873250671138523829689703441259089637714036490277572255947620218493"),
	E: intFromString("205"),
}
var yang = &PublicKey{
	N: intFromString("7739611342427769114707593244041892685173202718515229414521761553568616071354836942198673517320233123191"),
	E: intFromString("203"),
}
var maik = &PublicKey{
	N: intFromString("850806676411112981146784234244509672618345798504822684617629846148100181252110408354242119978894735087309585387832787793907011247150136378338982159272832456124539"),
	E: intFromString("401"),
}

func main() {
	//key := GenerateKey(512)
	//fmt.Println(key.N, key.E)
	//fmt.Println(key.D)

	//m := newMsg("hallo", robin.PublicKey)
	//fmt.Println(getMsg(m, robin))

	m := newMsg("THREE AESAR FORWARD GDV ZDU MD VHKU FOHYHU", maik)
	fmt.Println(m)
	m = newMsg(m, maik)
	fmt.Println(m)
	m = newMsg(m, maik)
	fmt.Println(m)

	//m := "1278871433844251136058857497606421684498567822126132078687401457941142818989903493506705747854955488049307547707959178637131030725251201798976444031621733721491563633710148111936807529391949245912815810417689386049133142513683701018005171225706258774349247828982929757647962833314230491422816167262918743958"
	//fmt.Println(getMsg(m, robin))
	//maikMsg := getMsg(`3038322850894921596752831323110775427674742490500087007527591340739611241274067183964003332971783905465263808351760727078602179162488723348911169776184384167067979322990338361830909079712946472755711115968052551359876504716444061144295214952939419240309318956379132427304286728924060192847721166212039134420`, robin)
}

func getMsg(m string, pri *PrivateKey) string {
	return toMessage(pri.Decrypt(intFromString(m)).String())
}
func newMsg(m string, pub *PublicKey) string {
	return pub.Encrypt(intFromString(fromMessage(m))).String()
}

func intFromString(s string) *big.Int {
	i, ok := newInt().SetString(s, 0)
	if !ok {
		panic(fmt.Sprintf("%s to big int error", s))
	}
	return i
}
